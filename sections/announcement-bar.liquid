{% comment %}
  Midnight Disko Club — Announcement Bar (2025 best practices)
  - A11y: aria-live, proper roles, focusable, keyboard-friendly close
  - Performance: inline critical CSS, tiny JS, no layout shift
  - Motion: honors prefers-reduced-motion
  - UX: rotating messages, pause on hover / tab blur, dismiss with optional expiry
  - Targeting: show on specific templates; date/time scheduling window
  - Analytics: dispatch CustomEvents and dataLayer pushes for impressions/clicks/close

  NOTE: All options configurable in the section schema below.
{% endcomment %}

{% assign now_ts = 'now' | date: "%s" %}
{% assign start_ts = section.settings.start_datetime | default: '' %}
{% assign end_ts = section.settings.end_datetime | default: '' %}
{% if start_ts != '' %}{% assign start_ts = start_ts | date: "%s" %}{% endif %}
{% if end_ts != '' %}{% assign end_ts = end_ts | date: "%s" %}{% endif %}

{% comment %} Template targeting {% endcomment %}
{% assign show_on_this_template = true %}
{% if section.settings.scope != 'all' %}
  {% if section.settings.scope == 'home_only' and template.name != 'index' %}
    {% assign show_on_this_template = false %}
  {% elsif section.settings.scope == 'non_home' and template.name == 'index' %}
    {% assign show_on_this_template = false %}
  {% endif %}
{% endif %}

{% comment %} Date window check {% endcomment %}
{% assign within_window = true %}
{% if start_ts != '' and now_ts < start_ts %}{% assign within_window = false %}{% endif %}
{% if end_ts != '' and now_ts > end_ts %}{% assign within_window = false %}{% endif %}

{% if section.settings.enable_bar and show_on_this_template and within_window %}
  {% assign items = '' | split: ',' %}
  {% for i in (1..5) %}
    {% assign t = section.settings["msg_" | append: i] %}
    {% if t != blank %}{% assign items = items | push: i %}{% endif %}
  {% endfor %}
  {% if items.size > 0 %}
    <div id="mdc-announcement"
         role="region"
         aria-label="{{ section.settings.aria_label | default: 'Site announcement' }}"
         aria-live="polite"
         data-rotate="{{ section.settings.rotate and items.size > 1 }}"
         data-interval="{{ section.settings.rotate_interval | times: 1000 }}"
         data-expire-days="{{ section.settings.dismiss_expiry_days }}"
         data-version="{{ section.settings.dismiss_version | escape }}"
         data-scope="{{ section.settings.scope }}"
         style="--mdc-bg: {{ section.settings.bg_color }}; --mdc-fg: {{ section.settings.text_color }}; --mdc-gap: 20px;">

      <style>
        /* Critical, tiny, and scoped */
        #mdc-announcement{position:relative;inset:auto;display:block;width:100%;background:var(--mdc-bg);color:var(--mdc-fg);z-index:9999;font-size:14px;line-height:1}
        #mdc-announcement .mdc-inner{display:flex;align-items:center;justify-content:center;gap:var(--mdc-gap);padding:10px 14px;white-space:nowrap;overflow:hidden;min-height:38px}
        #mdc-announcement a{color:var(--mdc-fg);text-decoration:none}
        #mdc-announcement a:hover{text-decoration:underline}
        #mdc-announcement .mdc-item{display:none;text-align:center}
        #mdc-announcement .mdc-item.is-active{display:block}
        #mdc-announcement .mdc-close{position:absolute;right:8px;top:8px;background:transparent;border:0;color:var(--mdc-fg);font-size:14px;cursor:pointer;opacity:.85;line-height:1}
        #mdc-announcement .mdc-close:focus{outline:2px solid currentColor;outline-offset:2px}
        @media (prefers-reduced-motion: reduce){
          #mdc-announcement{scroll-behavior:auto}
        }
      </style>

      {% if section.settings.show_close %}
        <button class="mdc-close" aria-label="{{ section.settings.close_label | default: 'Close announcement' }}" title="{{ section.settings.close_label | default: 'Close announcement' }}">✕</button>
      {% endif %}

      <div class="mdc-inner">
        {% for i in items %}
          {% assign text = section.settings["msg_" | append: i] %}
          {% assign url  = section.settings["url_" | append: i] %}
          {% assign label = section.settings["aria_" | append: i] | default: text %}
          <div class="mdc-item" data-index="{{ i }}">
            {% if url != blank %}
              <a href="{{ url }}"
                 {% if section.settings.open_new_tab %}target="_blank" rel="noopener noreferrer"{% endif %}
                 aria-label="{{ label | escape }}"
                 class="mdc-link">{{ text }}</a>
            {% else %}
              <span aria-label="{{ label | escape }}">{{ text }}</span>
            {% endif %}
          </div>
        {% endfor %}
      </div>

      <script>
        (function(){
          var bar = document.getElementById('mdc-announcement');
          if(!bar) return;

          var ver = bar.getAttribute('data-version') || 'v1';
          var key = 'mdc_announcement_closed_' + ver;
          var expiryDays = parseInt(bar.getAttribute('data-expire-days')||'0',10);

          // Respect previous dismiss with optional expiry
          try{
            var data = JSON.parse(localStorage.getItem(key) || 'null');
            if(data && (!expiryDays || (Date.now() - data.t) < expiryDays*864e5)){
              bar.style.display='none'; return;
            }
          }catch(e){}

          // Rotation
          var rotate = (bar.getAttribute('data-rotate') === 'true');
          var interval = parseInt(bar.getAttribute('data-interval')||'6000',10);
          var items = Array.prototype.slice.call(bar.querySelectorAll('.mdc-item'));
          if(!items.length) return;

          var idx = 0;
          items[idx].classList.add('is-active');

          var timer = null;
          function start(){
            if(!rotate || items.length<2) return;
            if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) return;
            stop();
            timer = setInterval(next, interval);
          }
          function stop(){ if(timer){ clearInterval(timer); timer=null; } }
          function next(){
            items[idx].classList.remove('is-active');
            idx = (idx+1) % items.length;
            items[idx].classList.add('is-active');
          }

          // Pause on hover and when tab is hidden
          bar.addEventListener('mouseenter', stop);
          bar.addEventListener('mouseleave', start);
          document.addEventListener('visibilitychange', function(){
            if(document.hidden) stop(); else start();
          });
          start();

          // Dismiss
          var closeBtn = bar.querySelector('.mdc-close');
          function dismiss(){
            bar.style.display='none';
            try{
              localStorage.setItem(key, JSON.stringify({t: Date.now()}));
            }catch(e){}
            // analytics
            try{
              bar.dispatchEvent(new CustomEvent('mdc:announcement:close'));
              window.dataLayer = window.dataLayer || [];
              window.dataLayer.push({event:'mdc_announcement_close', version: ver});
            }catch(e){}
          }
          if(closeBtn){
            closeBtn.addEventListener('click', dismiss);
            closeBtn.addEventListener('keydown', function(e){ if(e.key==='Enter' || e.key===' ') { e.preventDefault(); dismiss(); } });
          }

          // Analytics: impression + clicks
          try{
            bar.dispatchEvent(new CustomEvent('mdc:announcement:impression'));
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({event:'mdc_announcement_impression', version: ver});
          }catch(e){}

          bar.addEventListener('click', function(e){
            var a = e.target.closest('a.mdc-link');
            if(!a) return;
            try{
              bar.dispatchEvent(new CustomEvent('mdc:announcement:click', {detail:{href:a.href,text:a.textContent}}));
              window.dataLayer = window.dataLayer || [];
              window.dataLayer.push({event:'mdc_announcement_click', href:a.href, text:a.textContent, version: ver});
            }catch(e){}
          });
        })();
      </script>
    </div>
  {% endif %}
{% endif %}

{% schema %}
{
  "name": "Announcement Bar (2025)",
  "settings": [
    { "type": "checkbox", "id": "enable_bar", "label": "Enable bar", "default": true },

    { "type": "select", "id": "scope", "label": "Where to show", "default": "all",
      "options": [
        {"value":"all","label":"All pages"},
        {"value":"home_only","label":"Homepage only"},
        {"value":"non_home","label":"All except homepage"}
      ]
    },

    { "type": "text", "id": "start_datetime", "label": "Start (optional, e.g. 2025-08-20 09:00 -0500)" },
    { "type": "text", "id": "end_datetime", "label": "End (optional, e.g. 2025-09-01 23:59 -0500)" },

    { "type": "checkbox", "id": "rotate", "label": "Rotate multiple messages", "default": true },
    { "type": "range", "id": "rotate_interval", "min": 3, "max": 12, "step": 1, "unit": "s", "label": "Rotation interval", "default": 6 },

    { "type": "checkbox", "id": "show_close", "label": "Show close button", "default": true },
    { "type": "text", "id": "close_label", "label": "Close button label (a11y)", "default": "Close announcement" },
    { "type": "text", "id": "dismiss_version", "label": "Dismiss version key", "default": "v1" },
    { "type": "number", "id": "dismiss_expiry_days", "label": "Dismiss expiry (days, 0 = never)", "default": 0, "min": 0, "max": 365 },

    { "type": "text", "id": "aria_label", "label": "Region label (a11y)", "default": "Site announcement" },

    { "type": "color", "id": "bg_color", "label": "Background color", "default": "#0F0A1F" },
    { "type": "color", "id": "text_color", "label": "Text color", "default": "#FFFFFF" },

    { "type": "text", "id": "msg_1", "label": "Message 1", "default": "Join the club with no address → Discord" },
    { "type": "url",  "id": "url_1", "label": "Link 1" },
    { "type": "text", "id": "aria_1", "label": "ARIA label 1 (optional)" },

    { "type": "text", "id": "msg_2", "label": "Message 2" },
    { "type": "url",  "id": "url_2", "label": "Link 2" },
    { "type": "text", "id": "aria_2", "label": "ARIA label 2 (optional)" },

    { "type": "text", "id": "msg_3", "label": "Message 3" },
    { "type": "url",  "id": "url_3", "label": "Link 3" },
    { "type": "text", "id": "aria_3", "label": "ARIA label 3 (optional)" },

    { "type": "text", "id": "msg_4", "label": "Message 4" },
    { "type": "url",  "id": "url_4", "label": "Link 4" },
    { "type": "text", "id": "aria_4", "label": "ARIA label 4 (optional)" },

    { "type": "text", "id": "msg_5", "label": "Message 5" },
    { "type": "url",  "id": "url_5", "label": "Link 5" },
    { "type": "text", "id": "aria_5", "label": "ARIA label 5 (optional)" },

    { "type": "checkbox", "id": "open_new_tab", "label": "Open links in new tab", "default": true }
  ],
  "presets": [{ "name": "Announcement Bar (2025)" }]
}
{% endschema %}
